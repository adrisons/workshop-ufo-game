///////////////////////////////////////////////////////////////
// IMPORTS
///////////////////////////////////////////////////////////////
import React from 'react';

import Utils from '../plugin/utils';

import Character from './Character';

import logo from '../assets/img/ufo.svg';

///////////////////////////////////////////////////////////////
// CONSTANTS
///////////////////////////////////////////////////////////////
const PLAYER_SIZE = 48;

///////////////////////////////////////////////////////////////
// CONSTRUCTOR
///////////////////////////////////////////////////////////////
class Player extends Character {

  ///////////////////////////////////////////////////////////////
  // CONSTRUCTOR
  ///////////////////////////////////////////////////////////////
  constructor(props){
    super(props);
    this._onKeyDown = this._onKeyDown.bind(this); // Manage input
  }

  ///////////////////////////////////////////////////////////////
  // CALLBACKS
  ///////////////////////////////////////////////////////////////
  componentDidMount() {
    document.addEventListener("keydown", this._onKeyDown );
  }

  componentWillUnmount() {
    document.removeEventListener("keydown", this._onKeyDown );
  }

  ///////////////////////////////////////////////////////////////
  // PUBLIC METHODS
  ///////////////////////////////////////////////////////////////
  getSize() {
    return PLAYER_SIZE;
  }

  ///////////////////////////////////////////////////////////////
  // EVENTS
  ///////////////////////////////////////////////////////////////
  _onKeyDown(event) {
    this.setState(
      Utils.getNextPositionByKeyboard(
        event.code, this.state.x, this.state.y, this.props.boardWidth, this.props.boardHeight, PLAYER_SIZE, this.props.playerSpeed
      )
    );
  }

  ///////////////////////////////////////////////////////////////
  // PRIVATE METHODS
  ///////////////////////////////////////////////////////////////
  _getNewPositions() {
    // By default player is centered on board
    return {
      x: ((this.props.boardWidth - this.getSize()) / 2),
      y: ((this.props.boardHeight - this.getSize()) / 2)
    };
  }

  ///////////////////////////////////////////////////////////////
  // RENDERS
  ///////////////////////////////////////////////////////////////
  render() {
    return(
      <img
        src={logo}
        className="Player"
        alt="logo"
        style={{ left: this.state.x, top: this.state.y, height: `${this.getSize()}px`, width: `${this.getSize()}px` }}
      />
    )
  }

}

///////////////////////////////////////////////////////////////
// EXPORTS
///////////////////////////////////////////////////////////////
export default Player;
